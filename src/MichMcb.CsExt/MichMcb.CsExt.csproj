<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net6.0;net5.0;netstandard2.0</TargetFrameworks>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <RootNamespace>MichMcb.CsExt</RootNamespace>
    <Version>2.4.0</Version>
    <Description>A library full of helpful stuff. It's just a collection of functions I've created. This particular library is mainly stuff that I make for myself that I feel like sharing.</Description>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageIcon>Ghost.png</PackageIcon>
    <RepositoryUrl>https://github.com/Michmcb/CsExt</RepositoryUrl>
    <PackageReleaseNotes>- Added One, which can be used to wrap a single value and treat it as a IReadOnlyList, saves an array allocation.
- Opt has ValueOrException(), just like Maybe now
- Added a PCG (Permuted congruential generator) RNG, which can return ints, uints, doubles, and fill byte spans
	 </PackageReleaseNotes>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageProjectUrl>https://github.com/Michmcb/CsExt</PackageProjectUrl>
    <RepositoryType>git</RepositoryType>
    <Authors>Michael McBride</Authors>
    <Product />
    <Company />
    <Copyright></Copyright>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
    <FileVersion>2.4.0.0</FileVersion>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="Ghost.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.Memory" Version="4.5.4" Condition="'$(TargetFramework)'=='netstandard2.0'" />
  </ItemGroup>
</Project>
